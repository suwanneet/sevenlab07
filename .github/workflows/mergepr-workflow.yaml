name: Merge Pull Request Workflow

on: 
  pull_request:
    types:
      - closed

jobs:
 unittest: 
        name: Unit Test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              name: Checkout
            - uses: actions/setup-go@v3
              name: Setup Go environment
              with:
                go-version-file: ./src/go.mod
            - name: Run Unit Test
              working-directory: ./src
              run: go test ./...

code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3 #Use checkout action to download the source code to run unittest
              name: Checkout
            - uses: actions/setup-go@v3 #Setup golang environment for runnint unittest
              name: Setup Go environment
              with:
                go-version-file: ./src/go.mod
            - name: Run Code Coverage checking
              working-directory: ./src
              run: go test -coverprofile coverage.out ./...
            - name: Reformat coverage report
              working-directory: ./src
              run: go tool cover -func coverage.out -o coverage.txt
            - name: Print out report
              working-directory: ./src
              run: cat coverage.txt
            - name: Upload coverage report to artifact
              uses: actions/upload-artifact@v3
              with:
                name: code-coverage-report
                path: src/coverage.txt
code-vuln-scan:
        name: Code Vulnerability Scan
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3 #Use checkout action to download the source code to run unittest
              name: Checkout
            - uses: aquasecurity/trivy-action@master
              name: Vulnerability Scan
              with:
                scan-type: 'fs'
                ignore-unfixed: true
                format: 'sarif'
                output: 'trivy-results.sarif'
                severity: 'CRITICAL'
            - uses: actions/upload-artifact@v3
              name: Save Code vulnerability scan report
              with:
                name: code-vuln-report
                path: trivy-results.sarif
    quality-gate: #custon action
        runs-on: ubuntu-latest
        needs: ["code-coverage", "unittest", "code-vuln-scan"]
        steps:
        - uses: actions/checkout@v3
        - uses: actions/download-artifact@v3
          with:
            name: code-coverage-report
            path: ./src
        - run: python coverage.py 1
          working-directory: ./src
          name: Simple Quality Gate
  build-container:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build an image from Dockerfile
        run: |
          docker build . --file Dockerfile --tag pttgc-devops-lab07/blog-service:${{ github.sha }}

  deploy-dev:
    runs-on: ubuntu-latest
    needs: "build-container"
    steps:
      - name: Mock deployment step 
        run: echo 'Mock deploy to dev'
